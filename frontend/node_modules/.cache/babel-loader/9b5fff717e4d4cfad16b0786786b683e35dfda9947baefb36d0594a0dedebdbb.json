{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\family-constellation\\\\frontend\\\\src\\\\Canvas.js\",\n  _s = $RefreshSig$();\nimport React, { forwardRef } from 'react';\nimport { useDrop } from 'react-dnd';\nimport FamilyMember from './FamilyMember';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MIN_DISTANCE = 0;\nfunction getNonOverlappingPosition(x, y, members, currentId, memberSize, canvasWidth, canvasHeight) {\n  let safeX = x;\n  let safeY = y;\n  let tries = 0;\n  while (tries < 30) {\n    const isOverlapping = members.some(m => m.id !== currentId && Math.abs(m.x - safeX) < memberSize - MIN_DISTANCE && Math.abs(m.y - safeY) < memberSize - MIN_DISTANCE);\n    if (!isOverlapping) break;\n    safeX = Math.max(0, Math.min(safeX + 15, canvasWidth - memberSize));\n    safeY = Math.max(0, Math.min(safeY + 15, canvasHeight - memberSize));\n    tries++;\n  }\n  return {\n    x: safeX,\n    y: safeY\n  };\n}\nconst CANVAS_WIDTH = 1200;\nconst CANVAS_HEIGHT = 500;\nconst Canvas = /*#__PURE__*/_s(/*#__PURE__*/forwardRef(_c = _s(({\n  members,\n  updateMemberPosition,\n  onUpdateMember\n}, ref) => {\n  _s();\n  // 打印画布尺寸信息\n  console.log('🎨 Canvas 渲染 - 尺寸:', {\n    width: CANVAS_WIDTH,\n    height: CANVAS_HEIGHT\n  });\n  const [, drop] = useDrop({\n    accept: 'MEMBER',\n    drop: (item, monitor) => {\n      console.log('🚀 开始拖拽放置操作 - 成员ID:', item.id);\n      const clientOffset = monitor.getClientOffset();\n      const canvas = document.getElementById('canvas-area');\n      if (!clientOffset || !canvas) {\n        console.log('❌ 无法获取客户端偏移量或画布元素');\n        return;\n      }\n      const canvasRect = canvas.getBoundingClientRect();\n      console.log('📐 画布位置信息:', {\n        canvasRect: {\n          left: canvasRect.left,\n          top: canvasRect.top,\n          width: canvasRect.width,\n          height: canvasRect.height\n        },\n        clientOffset: {\n          x: clientOffset.x,\n          y: clientOffset.y\n        }\n      });\n\n      // 找到当前拖拽的成员\n      const member = members.find(m => m.id === item.id);\n      if (!member) {\n        console.log('❌ 找不到对应的成员');\n        return;\n      }\n      console.log('👤 拖拽前成员信息:', {\n        id: member.id,\n        name: member.name,\n        currentPosition: {\n          x: member.x,\n          y: member.y\n        },\n        size: {\n          width: member.width || 72,\n          height: member.height || 72\n        },\n        initialOffset: item.initialOffset\n      });\n      const memberWidth = member.width || 72;\n      const memberHeight = member.height || 72;\n\n      // 计算鼠标在画布内的相对位置\n      const relativeX = clientOffset.x - canvasRect.left;\n      const relativeY = clientOffset.y - canvasRect.top;\n      console.log('📍 鼠标相对画布位置:', {\n        relativeX,\n        relativeY\n      });\n\n      // 使用拖拽开始时记录的偏移量来计算准确位置\n      let x, y;\n      if (item.initialOffset && item.initialOffset.x !== null && item.initialOffset.y !== null) {\n        // 使用初始偏移量计算位置\n        x = relativeX - item.initialOffset.x;\n        y = relativeY - item.initialOffset.y;\n        console.log('✅ 使用初始偏移量计算:', {\n          initialOffset: item.initialOffset,\n          calculatedPosition: {\n            x,\n            y\n          }\n        });\n      } else {\n        // 降级方案：假设从中心拖拽\n        x = relativeX - memberWidth / 2;\n        y = relativeY - memberHeight / 2;\n        console.log('⚠️ 使用降级方案（中心拖拽）:', {\n          calculatedPosition: {\n            x,\n            y\n          }\n        });\n      }\n\n      // 确保成员完全在画布内\n      const beforeClamp = {\n        x,\n        y\n      };\n      x = Math.max(0, Math.min(x, CANVAS_WIDTH - memberWidth));\n      y = Math.max(0, Math.min(y, CANVAS_HEIGHT - memberHeight));\n      console.log('🔒 边界限制后:', {\n        before: beforeClamp,\n        after: {\n          x,\n          y\n        },\n        canvasLimits: {\n          maxX: CANVAS_WIDTH - memberWidth,\n          maxY: CANVAS_HEIGHT - memberHeight\n        }\n      });\n\n      // 防止重叠（使用较大的尺寸作为碰撞检测）\n      const memberSize = Math.max(memberWidth, memberHeight);\n      const beforeOverlapCheck = {\n        x,\n        y\n      };\n      const {\n        x: safeX,\n        y: safeY\n      } = getNonOverlappingPosition(x, y, members, item.id, memberSize, CANVAS_WIDTH, CANVAS_HEIGHT);\n      console.log('🔄 重叠检测后:', {\n        before: beforeOverlapCheck,\n        after: {\n          x: safeX,\n          y: safeY\n        }\n      });\n      console.log('📌 最终移动结果:', {\n        成员: member.name,\n        移动前: {\n          x: member.x,\n          y: member.y\n        },\n        移动后: {\n          x: safeX,\n          y: safeY\n        },\n        移动距离: {\n          deltaX: safeX - member.x,\n          deltaY: safeY - member.y\n        }\n      });\n      updateMemberPosition(item.id, safeX, safeY);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"canvas-area\",\n    ref: node => {\n      drop(node);\n      if (ref) {\n        if (typeof ref === 'function') ref(node);else ref.current = node;\n      }\n    },\n    className: \"mx-auto relative bg-white border-4 border-black rounded-xl overflow-hidden shadow-inner select-none\",\n    style: {\n      width: CANVAS_WIDTH,\n      height: CANVAS_HEIGHT,\n      backgroundImage: `\n          radial-gradient(circle,rgb(188, 175, 200) 1px, transparent 1px),\n          linear-gradient(#f3f4f6,rgb(255, 255, 255))\n        `,\n      backgroundSize: '20px 20px, 100% 100%',\n      backgroundPosition: '0 0, 0 0',\n      boxSizing: 'border-box'\n    },\n    children: members.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 text-blue-400 text-xl font-semibold select-none\",\n      children: \"\\u8BF7\\u6DFB\\u52A0\\u5BB6\\u5EAD\\u6210\\u5458\\u5E76\\u62D6\\u52A8\\u5230\\u753B\\u5E03\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }, this) : members.map(member => /*#__PURE__*/_jsxDEV(FamilyMember, {\n      member: member,\n      onUpdate: onUpdateMember\n    }, member.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n}, \"hdmCamxlwL9WeSdzgzIVyaE48AI=\", false, function () {\n  return [useDrop];\n})), \"hdmCamxlwL9WeSdzgzIVyaE48AI=\", false, function () {\n  return [useDrop];\n});\n_c2 = Canvas;\nexport default Canvas;\nvar _c, _c2;\n$RefreshReg$(_c, \"Canvas$forwardRef\");\n$RefreshReg$(_c2, \"Canvas\");","map":{"version":3,"names":["React","forwardRef","useDrop","FamilyMember","jsxDEV","_jsxDEV","MIN_DISTANCE","getNonOverlappingPosition","x","y","members","currentId","memberSize","canvasWidth","canvasHeight","safeX","safeY","tries","isOverlapping","some","m","id","Math","abs","max","min","CANVAS_WIDTH","CANVAS_HEIGHT","Canvas","_s","_c","updateMemberPosition","onUpdateMember","ref","console","log","width","height","drop","accept","item","monitor","clientOffset","getClientOffset","canvas","document","getElementById","canvasRect","getBoundingClientRect","left","top","member","find","name","currentPosition","size","initialOffset","memberWidth","memberHeight","relativeX","relativeY","calculatedPosition","beforeClamp","before","after","canvasLimits","maxX","maxY","beforeOverlapCheck","成员","移动前","移动后","移动距离","deltaX","deltaY","node","current","className","style","backgroundImage","backgroundSize","backgroundPosition","boxSizing","children","length","fileName","_jsxFileName","lineNumber","columnNumber","map","onUpdate","_c2","$RefreshReg$"],"sources":["D:/Code/family-constellation/frontend/src/Canvas.js"],"sourcesContent":["import React, { forwardRef } from 'react';\r\nimport { useDrop } from 'react-dnd';\r\nimport FamilyMember from './FamilyMember';\r\nimport './index.css';\r\n\r\nconst MIN_DISTANCE = 0;\r\n\r\nfunction getNonOverlappingPosition(x, y, members, currentId, memberSize, canvasWidth, canvasHeight) {\r\n  let safeX = x;\r\n  let safeY = y;\r\n  let tries = 0;\r\n\r\n  while (tries < 30) {\r\n    const isOverlapping = members.some(\r\n      m =>\r\n        m.id !== currentId &&\r\n        Math.abs(m.x - safeX) < memberSize - MIN_DISTANCE &&\r\n        Math.abs(m.y - safeY) < memberSize - MIN_DISTANCE\r\n    );\r\n\r\n    if (!isOverlapping) break;\r\n\r\n    safeX = Math.max(0, Math.min(safeX + 15, canvasWidth - memberSize));\r\n    safeY = Math.max(0, Math.min(safeY + 15, canvasHeight - memberSize));\r\n    tries++;\r\n  }\r\n\r\n  return { x: safeX, y: safeY };\r\n}\r\n\r\nconst CANVAS_WIDTH = 1200;\r\nconst CANVAS_HEIGHT = 500;\r\n\r\nconst Canvas = forwardRef(({ members, updateMemberPosition, onUpdateMember }, ref) => {\r\n  // 打印画布尺寸信息\r\n  console.log('🎨 Canvas 渲染 - 尺寸:', { width: CANVAS_WIDTH, height: CANVAS_HEIGHT });\r\n  \r\n  const [, drop] = useDrop({\r\n    accept: 'MEMBER',\r\n    drop: (item, monitor) => {\r\n      console.log('🚀 开始拖拽放置操作 - 成员ID:', item.id);\r\n      \r\n      const clientOffset = monitor.getClientOffset();\r\n      const canvas = document.getElementById('canvas-area');\r\n      if (!clientOffset || !canvas) {\r\n        console.log('❌ 无法获取客户端偏移量或画布元素');\r\n        return;\r\n      }\r\n      \r\n      const canvasRect = canvas.getBoundingClientRect();\r\n      console.log('📐 画布位置信息:', {\r\n        canvasRect: {\r\n          left: canvasRect.left,\r\n          top: canvasRect.top,\r\n          width: canvasRect.width,\r\n          height: canvasRect.height\r\n        },\r\n        clientOffset: {\r\n          x: clientOffset.x,\r\n          y: clientOffset.y\r\n        }\r\n      });\r\n      \r\n      // 找到当前拖拽的成员\r\n      const member = members.find(m => m.id === item.id);\r\n      if (!member) {\r\n        console.log('❌ 找不到对应的成员');\r\n        return;\r\n      }\r\n      \r\n      console.log('👤 拖拽前成员信息:', {\r\n        id: member.id,\r\n        name: member.name,\r\n        currentPosition: { x: member.x, y: member.y },\r\n        size: { width: member.width || 72, height: member.height || 72 },\r\n        initialOffset: item.initialOffset\r\n      });\r\n      \r\n      const memberWidth = member.width || 72;\r\n      const memberHeight = member.height || 72;\r\n\r\n      // 计算鼠标在画布内的相对位置\r\n      const relativeX = clientOffset.x - canvasRect.left;\r\n      const relativeY = clientOffset.y - canvasRect.top;\r\n      \r\n      console.log('📍 鼠标相对画布位置:', { relativeX, relativeY });\r\n\r\n      // 使用拖拽开始时记录的偏移量来计算准确位置\r\n      let x, y;\r\n      if (item.initialOffset && item.initialOffset.x !== null && item.initialOffset.y !== null) {\r\n        // 使用初始偏移量计算位置\r\n        x = relativeX - item.initialOffset.x;\r\n        y = relativeY - item.initialOffset.y;\r\n        console.log('✅ 使用初始偏移量计算:', {\r\n          initialOffset: item.initialOffset,\r\n          calculatedPosition: { x, y }\r\n        });\r\n      } else {\r\n        // 降级方案：假设从中心拖拽\r\n        x = relativeX - memberWidth / 2;\r\n        y = relativeY - memberHeight / 2;\r\n        console.log('⚠️ 使用降级方案（中心拖拽）:', {\r\n          calculatedPosition: { x, y }\r\n        });\r\n      }\r\n\r\n      // 确保成员完全在画布内\r\n      const beforeClamp = { x, y };\r\n      x = Math.max(0, Math.min(x, CANVAS_WIDTH - memberWidth));\r\n      y = Math.max(0, Math.min(y, CANVAS_HEIGHT - memberHeight));\r\n      \r\n      console.log('🔒 边界限制后:', {\r\n        before: beforeClamp,\r\n        after: { x, y },\r\n        canvasLimits: { \r\n          maxX: CANVAS_WIDTH - memberWidth, \r\n          maxY: CANVAS_HEIGHT - memberHeight \r\n        }\r\n      });\r\n\r\n      // 防止重叠（使用较大的尺寸作为碰撞检测）\r\n      const memberSize = Math.max(memberWidth, memberHeight);\r\n      const beforeOverlapCheck = { x, y };\r\n      const { x: safeX, y: safeY } = getNonOverlappingPosition(\r\n        x, y, members, item.id, memberSize, CANVAS_WIDTH, CANVAS_HEIGHT\r\n      );\r\n      \r\n      console.log('🔄 重叠检测后:', {\r\n        before: beforeOverlapCheck,\r\n        after: { x: safeX, y: safeY }\r\n      });\r\n\r\n      console.log('📌 最终移动结果:', {\r\n        成员: member.name,\r\n        移动前: { x: member.x, y: member.y },\r\n        移动后: { x: safeX, y: safeY },\r\n        移动距离: { \r\n          deltaX: safeX - member.x, \r\n          deltaY: safeY - member.y \r\n        }\r\n      });\r\n\r\n      updateMemberPosition(item.id, safeX, safeY);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div\r\n      id=\"canvas-area\"\r\n      ref={node => {\r\n        drop(node);\r\n        if (ref) {\r\n          if (typeof ref === 'function') ref(node);\r\n          else ref.current = node;\r\n        }\r\n      }}\r\n      className=\"mx-auto relative bg-white border-4 border-black rounded-xl overflow-hidden shadow-inner select-none\"\r\n      style={{\r\n        width: CANVAS_WIDTH,\r\n        height: CANVAS_HEIGHT,\r\n        backgroundImage: `\r\n          radial-gradient(circle,rgb(188, 175, 200) 1px, transparent 1px),\r\n          linear-gradient(#f3f4f6,rgb(255, 255, 255))\r\n        `,\r\n        backgroundSize: '20px 20px, 100% 100%',\r\n        backgroundPosition: '0 0, 0 0',\r\n        boxSizing: 'border-box',\r\n      }}\r\n    >\r\n      {members.length === 0 ? (\r\n        <div className=\"absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 text-blue-400 text-xl font-semibold select-none\">\r\n          请添加家庭成员并拖动到画布\r\n        </div>\r\n      ) : (\r\n        members.map(member => (\r\n          <FamilyMember key={member.id} member={member} onUpdate={onUpdateMember} />\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Canvas;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}