{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\family-constellation\\\\frontend\\\\src\\\\Canvas.js\",\n  _s = $RefreshSig$();\nimport React, { forwardRef, useEffect } from 'react';\nimport { useDrop } from 'react-dnd';\nimport FamilyMember from './FamilyMember';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MIN_DISTANCE = 0;\nfunction getNonOverlappingPosition(x, y, members, currentId, memberSize, canvasWidth, canvasHeight) {\n  let safeX = x;\n  let safeY = y;\n  let tries = 0;\n  console.log('🔍 重叠检测开始:', {\n    输入位置: {\n      x,\n      y\n    },\n    成员尺寸: memberSize,\n    画布尺寸: {\n      canvasWidth,\n      canvasHeight\n    },\n    其他成员数量: members.filter(m => m.id !== currentId).length\n  });\n  while (tries < 30) {\n    const overlappingMembers = members.filter(m => m.id !== currentId && Math.abs(m.x - safeX) < memberSize - MIN_DISTANCE && Math.abs(m.y - safeY) < memberSize - MIN_DISTANCE);\n    const isOverlapping = overlappingMembers.length > 0;\n    if (!isOverlapping) {\n      if (tries > 0) {\n        console.log('✅ 找到无重叠位置:', {\n          最终位置: {\n            x: safeX,\n            y: safeY\n          },\n          尝试次数: tries\n        });\n      }\n      break;\n    }\n    console.log(`⚠️ 第${tries + 1}次重叠检测:`, {\n      当前位置: {\n        x: safeX,\n        y: safeY\n      },\n      重叠成员: overlappingMembers.map(m => ({\n        name: m.name,\n        pos: {\n          x: m.x,\n          y: m.y\n        }\n      }))\n    });\n    safeX = Math.max(0, Math.min(safeX + 15, canvasWidth - memberSize));\n    safeY = Math.max(0, Math.min(safeY + 15, canvasHeight - memberSize));\n    tries++;\n  }\n  if (tries >= 30) {\n    console.log('⚠️ 重叠检测达到最大尝试次数');\n  }\n  return {\n    x: safeX,\n    y: safeY\n  };\n}\nconst CANVAS_WIDTH = 1200;\nconst CANVAS_HEIGHT = 500;\nconst Canvas = /*#__PURE__*/_s(/*#__PURE__*/forwardRef(_c = _s(({\n  members,\n  updateMemberPosition,\n  onUpdateMember\n}, ref) => {\n  _s();\n  // 打印画布尺寸信息\n  console.log('🎨 Canvas 渲染 - 尺寸:', {\n    width: CANVAS_WIDTH,\n    height: CANVAS_HEIGHT\n  });\n\n  // 监听画布DOM变化\n  useEffect(() => {\n    const canvas = document.getElementById('canvas-area');\n    if (canvas) {\n      const rect = canvas.getBoundingClientRect();\n      const computedStyle = window.getComputedStyle(canvas);\n      const devicePixelRatio = window.devicePixelRatio || 1;\n      console.log('🎨 Canvas DOM 详细信息:', {\n        设计尺寸: {\n          width: CANVAS_WIDTH,\n          height: CANVAS_HEIGHT\n        },\n        实际DOM尺寸: {\n          width: rect.width,\n          height: rect.height\n        },\n        DOM位置: {\n          left: rect.left,\n          top: rect.top\n        },\n        CSS样式尺寸: {\n          width: computedStyle.width,\n          height: computedStyle.height\n        },\n        缩放比例: {\n          x: rect.width / CANVAS_WIDTH,\n          y: rect.height / CANVAS_HEIGHT\n        },\n        设备像素比: devicePixelRatio,\n        视口信息: {\n          innerWidth: window.innerWidth,\n          innerHeight: window.innerHeight,\n          scrollX: window.scrollX,\n          scrollY: window.scrollY\n        }\n      });\n    }\n  }, [members.length]); // 当成员数量变化时重新检查\n\n  const [, drop] = useDrop({\n    accept: 'MEMBER',\n    drop: (item, monitor) => {\n      console.log('🚀 开始拖拽放置操作 - 成员ID:', item.id);\n      const clientOffset = monitor.getClientOffset();\n      const canvas = document.getElementById('canvas-area');\n      if (!clientOffset || !canvas) {\n        console.log('❌ 无法获取客户端偏移量或画布元素');\n        return;\n      }\n      const canvasRect = canvas.getBoundingClientRect();\n      console.log('📐 画布位置信息:', {\n        canvasRect: {\n          left: canvasRect.left,\n          top: canvasRect.top,\n          width: canvasRect.width,\n          height: canvasRect.height\n        },\n        clientOffset: {\n          x: clientOffset.x,\n          y: clientOffset.y\n        }\n      });\n\n      // 找到当前拖拽的成员\n      const member = members.find(m => m.id === item.id);\n      if (!member) {\n        console.log('❌ 找不到对应的成员');\n        return;\n      }\n      console.log('👤 拖拽前成员信息:', {\n        id: member.id,\n        name: member.name,\n        currentPosition: {\n          x: member.x,\n          y: member.y\n        },\n        size: {\n          width: member.width || 72,\n          height: member.height || 72\n        },\n        initialOffset: item.initialOffset\n      });\n      const memberWidth = member.width || 72;\n      const memberHeight = member.height || 72;\n\n      // 计算鼠标在画布内的相对位置\n      const relativeX = clientOffset.x - canvasRect.left;\n      const relativeY = clientOffset.y - canvasRect.top;\n      console.log('📍 鼠标相对画布位置:', {\n        relativeX,\n        relativeY\n      });\n\n      // 使用拖拽开始时记录的偏移量来计算准确位置\n      let x, y;\n\n      // 首先尝试使用传递的偏移量\n      if (item.initialOffset && item.initialOffset.x !== null && item.initialOffset.y !== null) {\n        x = relativeX - item.initialOffset.x;\n        y = relativeY - item.initialOffset.y;\n        console.log('✅ 使用传递的初始偏移量:', {\n          initialOffset: item.initialOffset,\n          calculatedPosition: {\n            x,\n            y\n          }\n        });\n      } else {\n        // 备用方案：尝试从DOM元素获取偏移量\n        const memberElement = document.querySelector(`[data-member-id=\"${item.id}\"]`);\n        const offsetX = memberElement === null || memberElement === void 0 ? void 0 : memberElement.getAttribute('data-drag-offset-x');\n        const offsetY = memberElement === null || memberElement === void 0 ? void 0 : memberElement.getAttribute('data-drag-offset-y');\n        if (offsetX && offsetY) {\n          const backupOffset = {\n            x: parseFloat(offsetX),\n            y: parseFloat(offsetY)\n          };\n          x = relativeX - backupOffset.x;\n          y = relativeY - backupOffset.y;\n          console.log('🔄 使用DOM备份偏移量:', {\n            backupOffset,\n            calculatedPosition: {\n              x,\n              y\n            }\n          });\n        } else {\n          // 最终降级方案：使用中心点\n          x = relativeX - memberWidth / 2;\n          y = relativeY - memberHeight / 2;\n          console.log('⚠️ 使用降级方案（中心拖拽）:', {\n            calculatedPosition: {\n              x,\n              y\n            }\n          });\n        }\n      }\n      console.log('🧮 位置计算详情:', {\n        鼠标相对画布: {\n          relativeX,\n          relativeY\n        },\n        使用的偏移量: item.initialOffset || '备用方案',\n        计算结果: {\n          x,\n          y\n        },\n        成员当前存储位置: {\n          x: member.x,\n          y: member.y\n        }\n      });\n\n      // 🚨 强制边界检查和坐标修正\n      const beforeClamp = {\n        x,\n        y\n      };\n\n      // 严格的边界限制\n      x = Math.max(0, Math.min(x, CANVAS_WIDTH - memberWidth));\n      y = Math.max(0, Math.min(y, CANVAS_HEIGHT - memberHeight));\n\n      // 额外的安全检查\n      if (x < 0 || x > CANVAS_WIDTH - memberWidth || y < 0 || y > CANVAS_HEIGHT - memberHeight) {\n        console.error('❌ 坐标超出边界，强制修正:', {\n          x,\n          y\n        });\n        x = Math.max(0, Math.min(x, CANVAS_WIDTH - memberWidth));\n        y = Math.max(0, Math.min(y, CANVAS_HEIGHT - memberHeight));\n      }\n      console.log('🔒 边界限制后:', {\n        before: beforeClamp,\n        after: {\n          x,\n          y\n        },\n        canvasLimits: {\n          maxX: CANVAS_WIDTH - memberWidth,\n          maxY: CANVAS_HEIGHT - memberHeight\n        },\n        '✅ 边界检查': {\n          x轴有效: x >= 0 && x <= CANVAS_WIDTH - memberWidth,\n          y轴有效: y >= 0 && y <= CANVAS_HEIGHT - memberHeight\n        }\n      });\n\n      // 防止重叠（使用较大的尺寸作为碰撞检测）\n      const memberSize = Math.max(memberWidth, memberHeight);\n      const beforeOverlapCheck = {\n        x,\n        y\n      };\n      const {\n        x: safeX,\n        y: safeY\n      } = getNonOverlappingPosition(x, y, members, item.id, memberSize, CANVAS_WIDTH, CANVAS_HEIGHT);\n      console.log('🔄 重叠检测后:', {\n        before: beforeOverlapCheck,\n        after: {\n          x: safeX,\n          y: safeY\n        }\n      });\n      console.log('📌 最终移动结果:', {\n        成员: member.name,\n        移动前: {\n          x: member.x,\n          y: member.y\n        },\n        移动后: {\n          x: safeX,\n          y: safeY\n        },\n        移动距离: {\n          deltaX: safeX - member.x,\n          deltaY: safeY - member.y\n        }\n      });\n      updateMemberPosition(item.id, safeX, safeY);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"canvas-area\",\n    ref: node => {\n      drop(node);\n      if (ref) {\n        if (typeof ref === 'function') ref(node);else ref.current = node;\n      }\n    },\n    className: \"mx-auto relative bg-white border-4 border-black rounded-xl overflow-hidden shadow-inner select-none\",\n    style: {\n      width: CANVAS_WIDTH,\n      height: CANVAS_HEIGHT,\n      backgroundImage: `\n          radial-gradient(circle,rgb(188, 175, 200) 1px, transparent 1px),\n          linear-gradient(#f3f4f6,rgb(255, 255, 255))\n        `,\n      backgroundSize: '20px 20px, 100% 100%',\n      backgroundPosition: '0 0, 0 0',\n      boxSizing: 'border-box'\n    },\n    children: members.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 text-blue-400 text-xl font-semibold select-none\",\n      children: \"\\u8BF7\\u6DFB\\u52A0\\u5BB6\\u5EAD\\u6210\\u5458\\u5E76\\u62D6\\u52A8\\u5230\\u753B\\u5E03\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 9\n    }, this) : members.map(member => /*#__PURE__*/_jsxDEV(FamilyMember, {\n      member: member,\n      onUpdate: onUpdateMember\n    }, member.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 241,\n    columnNumber: 5\n  }, this);\n}, \"Oh9HogiHh31958ClrDn19C8IUx0=\", false, function () {\n  return [useDrop];\n})), \"Oh9HogiHh31958ClrDn19C8IUx0=\", false, function () {\n  return [useDrop];\n});\n_c2 = Canvas;\nexport default Canvas;\nvar _c, _c2;\n$RefreshReg$(_c, \"Canvas$forwardRef\");\n$RefreshReg$(_c2, \"Canvas\");","map":{"version":3,"names":["React","forwardRef","useEffect","useDrop","FamilyMember","jsxDEV","_jsxDEV","MIN_DISTANCE","getNonOverlappingPosition","x","y","members","currentId","memberSize","canvasWidth","canvasHeight","safeX","safeY","tries","console","log","输入位置","成员尺寸","画布尺寸","其他成员数量","filter","m","id","length","overlappingMembers","Math","abs","isOverlapping","最终位置","尝试次数","当前位置","重叠成员","map","name","pos","max","min","CANVAS_WIDTH","CANVAS_HEIGHT","Canvas","_s","_c","updateMemberPosition","onUpdateMember","ref","width","height","canvas","document","getElementById","rect","getBoundingClientRect","computedStyle","window","getComputedStyle","devicePixelRatio","设计尺寸","实际DOM尺寸","DOM位置","left","top","CSS样式尺寸","缩放比例","设备像素比","视口信息","innerWidth","innerHeight","scrollX","scrollY","drop","accept","item","monitor","clientOffset","getClientOffset","canvasRect","member","find","currentPosition","size","initialOffset","memberWidth","memberHeight","relativeX","relativeY","calculatedPosition","memberElement","querySelector","offsetX","getAttribute","offsetY","backupOffset","parseFloat","鼠标相对画布","使用的偏移量","计算结果","成员当前存储位置","beforeClamp","error","before","after","canvasLimits","maxX","maxY","x轴有效","y轴有效","beforeOverlapCheck","成员","移动前","移动后","移动距离","deltaX","deltaY","node","current","className","style","backgroundImage","backgroundSize","backgroundPosition","boxSizing","children","fileName","_jsxFileName","lineNumber","columnNumber","onUpdate","_c2","$RefreshReg$"],"sources":["D:/Code/family-constellation/frontend/src/Canvas.js"],"sourcesContent":["import React, { forwardRef, useEffect } from 'react';\r\nimport { useDrop } from 'react-dnd';\r\nimport FamilyMember from './FamilyMember';\r\nimport './index.css';\r\n\r\nconst MIN_DISTANCE = 0;\r\n\r\nfunction getNonOverlappingPosition(x, y, members, currentId, memberSize, canvasWidth, canvasHeight) {\r\n  let safeX = x;\r\n  let safeY = y;\r\n  let tries = 0;\r\n\r\n  console.log('🔍 重叠检测开始:', { \r\n    输入位置: { x, y }, \r\n    成员尺寸: memberSize, \r\n    画布尺寸: { canvasWidth, canvasHeight },\r\n    其他成员数量: members.filter(m => m.id !== currentId).length\r\n  });\r\n\r\n  while (tries < 30) {\r\n    const overlappingMembers = members.filter(\r\n      m =>\r\n        m.id !== currentId &&\r\n        Math.abs(m.x - safeX) < memberSize - MIN_DISTANCE &&\r\n        Math.abs(m.y - safeY) < memberSize - MIN_DISTANCE\r\n    );\r\n    \r\n    const isOverlapping = overlappingMembers.length > 0;\r\n\r\n    if (!isOverlapping) {\r\n      if (tries > 0) {\r\n        console.log('✅ 找到无重叠位置:', { \r\n          最终位置: { x: safeX, y: safeY }, \r\n          尝试次数: tries \r\n        });\r\n      }\r\n      break;\r\n    }\r\n\r\n    console.log(`⚠️ 第${tries + 1}次重叠检测:`, { \r\n      当前位置: { x: safeX, y: safeY }, \r\n      重叠成员: overlappingMembers.map(m => ({ name: m.name, pos: { x: m.x, y: m.y } }))\r\n    });\r\n\r\n    safeX = Math.max(0, Math.min(safeX + 15, canvasWidth - memberSize));\r\n    safeY = Math.max(0, Math.min(safeY + 15, canvasHeight - memberSize));\r\n    tries++;\r\n  }\r\n\r\n  if (tries >= 30) {\r\n    console.log('⚠️ 重叠检测达到最大尝试次数');\r\n  }\r\n\r\n  return { x: safeX, y: safeY };\r\n}\r\n\r\nconst CANVAS_WIDTH = 1200;\r\nconst CANVAS_HEIGHT = 500;\r\n\r\nconst Canvas = forwardRef(({ members, updateMemberPosition, onUpdateMember }, ref) => {\r\n  // 打印画布尺寸信息\r\n  console.log('🎨 Canvas 渲染 - 尺寸:', { width: CANVAS_WIDTH, height: CANVAS_HEIGHT });\r\n  \r\n  // 监听画布DOM变化\r\n  useEffect(() => {\r\n    const canvas = document.getElementById('canvas-area');\r\n    if (canvas) {\r\n      const rect = canvas.getBoundingClientRect();\r\n      const computedStyle = window.getComputedStyle(canvas);\r\n      const devicePixelRatio = window.devicePixelRatio || 1;\r\n      \r\n      console.log('🎨 Canvas DOM 详细信息:', {\r\n        设计尺寸: { width: CANVAS_WIDTH, height: CANVAS_HEIGHT },\r\n        实际DOM尺寸: { width: rect.width, height: rect.height },\r\n        DOM位置: { left: rect.left, top: rect.top },\r\n        CSS样式尺寸: { \r\n          width: computedStyle.width, \r\n          height: computedStyle.height \r\n        },\r\n        缩放比例: { \r\n          x: rect.width / CANVAS_WIDTH, \r\n          y: rect.height / CANVAS_HEIGHT \r\n        },\r\n        设备像素比: devicePixelRatio,\r\n        视口信息: {\r\n          innerWidth: window.innerWidth,\r\n          innerHeight: window.innerHeight,\r\n          scrollX: window.scrollX,\r\n          scrollY: window.scrollY\r\n        }\r\n      });\r\n    }\r\n  }, [members.length]); // 当成员数量变化时重新检查\r\n\r\n  const [, drop] = useDrop({\r\n    accept: 'MEMBER',\r\n    drop: (item, monitor) => {\r\n      console.log('🚀 开始拖拽放置操作 - 成员ID:', item.id);\r\n      \r\n      const clientOffset = monitor.getClientOffset();\r\n      const canvas = document.getElementById('canvas-area');\r\n      if (!clientOffset || !canvas) {\r\n        console.log('❌ 无法获取客户端偏移量或画布元素');\r\n        return;\r\n      }\r\n      \r\n      const canvasRect = canvas.getBoundingClientRect();\r\n      console.log('📐 画布位置信息:', {\r\n        canvasRect: {\r\n          left: canvasRect.left,\r\n          top: canvasRect.top,\r\n          width: canvasRect.width,\r\n          height: canvasRect.height\r\n        },\r\n        clientOffset: {\r\n          x: clientOffset.x,\r\n          y: clientOffset.y\r\n        }\r\n      });\r\n      \r\n      // 找到当前拖拽的成员\r\n      const member = members.find(m => m.id === item.id);\r\n      if (!member) {\r\n        console.log('❌ 找不到对应的成员');\r\n        return;\r\n      }\r\n      \r\n      console.log('👤 拖拽前成员信息:', {\r\n        id: member.id,\r\n        name: member.name,\r\n        currentPosition: { x: member.x, y: member.y },\r\n        size: { width: member.width || 72, height: member.height || 72 },\r\n        initialOffset: item.initialOffset\r\n      });\r\n      \r\n      const memberWidth = member.width || 72;\r\n      const memberHeight = member.height || 72;\r\n\r\n      // 计算鼠标在画布内的相对位置\r\n      const relativeX = clientOffset.x - canvasRect.left;\r\n      const relativeY = clientOffset.y - canvasRect.top;\r\n      \r\n      console.log('📍 鼠标相对画布位置:', { relativeX, relativeY });\r\n\r\n      // 使用拖拽开始时记录的偏移量来计算准确位置\r\n      let x, y;\r\n      \r\n      // 首先尝试使用传递的偏移量\r\n      if (item.initialOffset && item.initialOffset.x !== null && item.initialOffset.y !== null) {\r\n        x = relativeX - item.initialOffset.x;\r\n        y = relativeY - item.initialOffset.y;\r\n        console.log('✅ 使用传递的初始偏移量:', {\r\n          initialOffset: item.initialOffset,\r\n          calculatedPosition: { x, y }\r\n        });\r\n      } else {\r\n        // 备用方案：尝试从DOM元素获取偏移量\r\n        const memberElement = document.querySelector(`[data-member-id=\"${item.id}\"]`);\r\n        const offsetX = memberElement?.getAttribute('data-drag-offset-x');\r\n        const offsetY = memberElement?.getAttribute('data-drag-offset-y');\r\n        \r\n        if (offsetX && offsetY) {\r\n          const backupOffset = { x: parseFloat(offsetX), y: parseFloat(offsetY) };\r\n          x = relativeX - backupOffset.x;\r\n          y = relativeY - backupOffset.y;\r\n          console.log('🔄 使用DOM备份偏移量:', {\r\n            backupOffset,\r\n            calculatedPosition: { x, y }\r\n          });\r\n        } else {\r\n          // 最终降级方案：使用中心点\r\n          x = relativeX - memberWidth / 2;\r\n          y = relativeY - memberHeight / 2;\r\n          console.log('⚠️ 使用降级方案（中心拖拽）:', {\r\n            calculatedPosition: { x, y }\r\n          });\r\n        }\r\n      }\r\n      \r\n      console.log('🧮 位置计算详情:', {\r\n        鼠标相对画布: { relativeX, relativeY },\r\n        使用的偏移量: item.initialOffset || '备用方案',\r\n        计算结果: { x, y },\r\n        成员当前存储位置: { x: member.x, y: member.y }\r\n      });\r\n\r\n      // 🚨 强制边界检查和坐标修正\r\n      const beforeClamp = { x, y };\r\n      \r\n      // 严格的边界限制\r\n      x = Math.max(0, Math.min(x, CANVAS_WIDTH - memberWidth));\r\n      y = Math.max(0, Math.min(y, CANVAS_HEIGHT - memberHeight));\r\n      \r\n      // 额外的安全检查\r\n      if (x < 0 || x > CANVAS_WIDTH - memberWidth || y < 0 || y > CANVAS_HEIGHT - memberHeight) {\r\n        console.error('❌ 坐标超出边界，强制修正:', { x, y });\r\n        x = Math.max(0, Math.min(x, CANVAS_WIDTH - memberWidth));\r\n        y = Math.max(0, Math.min(y, CANVAS_HEIGHT - memberHeight));\r\n      }\r\n      \r\n      console.log('🔒 边界限制后:', {\r\n        before: beforeClamp,\r\n        after: { x, y },\r\n        canvasLimits: { \r\n          maxX: CANVAS_WIDTH - memberWidth, \r\n          maxY: CANVAS_HEIGHT - memberHeight \r\n        },\r\n        '✅ 边界检查': {\r\n          x轴有效: x >= 0 && x <= CANVAS_WIDTH - memberWidth,\r\n          y轴有效: y >= 0 && y <= CANVAS_HEIGHT - memberHeight\r\n        }\r\n      });\r\n\r\n      // 防止重叠（使用较大的尺寸作为碰撞检测）\r\n      const memberSize = Math.max(memberWidth, memberHeight);\r\n      const beforeOverlapCheck = { x, y };\r\n      const { x: safeX, y: safeY } = getNonOverlappingPosition(\r\n        x, y, members, item.id, memberSize, CANVAS_WIDTH, CANVAS_HEIGHT\r\n      );\r\n      \r\n      console.log('🔄 重叠检测后:', {\r\n        before: beforeOverlapCheck,\r\n        after: { x: safeX, y: safeY }\r\n      });\r\n\r\n      console.log('📌 最终移动结果:', {\r\n        成员: member.name,\r\n        移动前: { x: member.x, y: member.y },\r\n        移动后: { x: safeX, y: safeY },\r\n        移动距离: { \r\n          deltaX: safeX - member.x, \r\n          deltaY: safeY - member.y \r\n        }\r\n      });\r\n\r\n      updateMemberPosition(item.id, safeX, safeY);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div\r\n      id=\"canvas-area\"\r\n      ref={node => {\r\n        drop(node);\r\n        if (ref) {\r\n          if (typeof ref === 'function') ref(node);\r\n          else ref.current = node;\r\n        }\r\n      }}\r\n      className=\"mx-auto relative bg-white border-4 border-black rounded-xl overflow-hidden shadow-inner select-none\"\r\n      style={{\r\n        width: CANVAS_WIDTH,\r\n        height: CANVAS_HEIGHT,\r\n        backgroundImage: `\r\n          radial-gradient(circle,rgb(188, 175, 200) 1px, transparent 1px),\r\n          linear-gradient(#f3f4f6,rgb(255, 255, 255))\r\n        `,\r\n        backgroundSize: '20px 20px, 100% 100%',\r\n        backgroundPosition: '0 0, 0 0',\r\n        boxSizing: 'border-box',\r\n      }}\r\n    >\r\n      {members.length === 0 ? (\r\n        <div className=\"absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 text-blue-400 text-xl font-semibold select-none\">\r\n          请添加家庭成员并拖动到画布\r\n        </div>\r\n      ) : (\r\n        members.map(member => (\r\n          <FamilyMember key={member.id} member={member} onUpdate={onUpdateMember} />\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Canvas;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}