{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\family-constellation\\\\frontend\\\\src\\\\Canvas.js\",\n  _s = $RefreshSig$();\nimport React, { forwardRef, useEffect } from 'react';\nimport { useDrop } from 'react-dnd';\nimport FamilyMember from './FamilyMember';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MIN_DISTANCE = 0;\nfunction getNonOverlappingPosition(x, y, members, currentId, memberSize, canvasWidth, canvasHeight) {\n  let safeX = x;\n  let safeY = y;\n  let tries = 0;\n  console.log('🔍 重叠检测开始:', {\n    输入位置: {\n      x,\n      y\n    },\n    成员尺寸: memberSize,\n    画布尺寸: {\n      canvasWidth,\n      canvasHeight\n    },\n    其他成员数量: members.filter(m => m.id !== currentId).length\n  });\n  while (tries < 30) {\n    const overlappingMembers = members.filter(m => m.id !== currentId && Math.abs(m.x - safeX) < memberSize - MIN_DISTANCE && Math.abs(m.y - safeY) < memberSize - MIN_DISTANCE);\n    const isOverlapping = overlappingMembers.length > 0;\n    if (!isOverlapping) {\n      if (tries > 0) {\n        console.log('✅ 找到无重叠位置:', {\n          最终位置: {\n            x: safeX,\n            y: safeY\n          },\n          尝试次数: tries\n        });\n      }\n      break;\n    }\n    console.log(`⚠️ 第${tries + 1}次重叠检测:`, {\n      当前位置: {\n        x: safeX,\n        y: safeY\n      },\n      重叠成员: overlappingMembers.map(m => ({\n        name: m.name,\n        pos: {\n          x: m.x,\n          y: m.y\n        }\n      }))\n    });\n    safeX = Math.max(0, Math.min(safeX + 15, canvasWidth - memberSize));\n    safeY = Math.max(0, Math.min(safeY + 15, canvasHeight - memberSize));\n    tries++;\n  }\n  if (tries >= 30) {\n    console.log('⚠️ 重叠检测达到最大尝试次数');\n  }\n  return {\n    x: safeX,\n    y: safeY\n  };\n}\n\n// 动态计算画布尺寸\nconst getCanvasSize = () => {\n  const viewportWidth = window.innerWidth;\n  const viewportHeight = window.innerHeight;\n\n  // 画布宽度占满页面宽度，高度占页面高度的40%\n  return {\n    width: viewportWidth,\n    height: Math.min(viewportHeight * 0.4, 500) // 最大500px\n  };\n};\nconst CANVAS_WIDTH = getCanvasSize().width;\nconst CANVAS_HEIGHT = getCanvasSize().height;\nconst Canvas = /*#__PURE__*/_s(/*#__PURE__*/forwardRef(_c = _s(({\n  members,\n  updateMemberPosition,\n  onUpdateMember\n}, ref) => {\n  _s();\n  // 动态获取画布尺寸\n  const [canvasSize, setCanvasSize] = React.useState(getCanvasSize());\n\n  // 监听窗口大小变化\n  React.useEffect(() => {\n    const handleResize = () => {\n      setCanvasSize(getCanvasSize());\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  const CANVAS_WIDTH = canvasSize.width;\n  const CANVAS_HEIGHT = canvasSize.height;\n\n  // 打印画布尺寸信息\n  console.log('🎨 Canvas 渲染 - 动态尺寸:', {\n    width: CANVAS_WIDTH,\n    height: CANVAS_HEIGHT\n  });\n\n  // 监听画布DOM变化\n  useEffect(() => {\n    const canvas = document.getElementById('canvas-area');\n    if (canvas) {\n      const rect = canvas.getBoundingClientRect();\n      const computedStyle = window.getComputedStyle(canvas);\n      const devicePixelRatio = window.devicePixelRatio || 1;\n\n      // 边框信息\n      const borderLeft = parseFloat(computedStyle.borderLeftWidth) || 0;\n      const borderTop = parseFloat(computedStyle.borderTopWidth) || 0;\n      const borderRight = parseFloat(computedStyle.borderRightWidth) || 0;\n      const borderBottom = parseFloat(computedStyle.borderBottomWidth) || 0;\n\n      // 内容区域尺寸\n      const contentWidth = rect.width - borderLeft - borderRight;\n      const contentHeight = rect.height - borderTop - borderBottom;\n      console.log('🎨 Canvas DOM 详细信息:', {\n        设计尺寸: {\n          width: CANVAS_WIDTH,\n          height: CANVAS_HEIGHT\n        },\n        实际DOM尺寸: {\n          width: rect.width,\n          height: rect.height\n        },\n        内容区域尺寸: {\n          width: contentWidth,\n          height: contentHeight\n        },\n        DOM位置: {\n          left: rect.left,\n          top: rect.top\n        },\n        边框信息: {\n          left: borderLeft,\n          top: borderTop,\n          right: borderRight,\n          bottom: borderBottom\n        },\n        CSS样式尺寸: {\n          width: computedStyle.width,\n          height: computedStyle.height\n        },\n        缩放比例: {\n          x: contentWidth / CANVAS_WIDTH,\n          y: contentHeight / CANVAS_HEIGHT\n        },\n        '⚠️ 尺寸匹配检查': {\n          '内容区宽度匹配': Math.abs(contentWidth - CANVAS_WIDTH) < 2,\n          '内容区高度匹配': Math.abs(contentHeight - CANVAS_HEIGHT) < 2\n        },\n        设备像素比: devicePixelRatio,\n        视口信息: {\n          innerWidth: window.innerWidth,\n          innerHeight: window.innerHeight,\n          scrollX: window.scrollX,\n          scrollY: window.scrollY\n        }\n      });\n    }\n  }, [members.length]); // 当成员数量变化时重新检查\n\n  const [, drop] = useDrop({\n    accept: 'MEMBER',\n    drop: (item, monitor) => {\n      console.log('🚀 开始拖拽放置操作 - 成员ID:', item.id);\n      const clientOffset = monitor.getClientOffset();\n      const canvas = document.getElementById('canvas-area');\n      if (!clientOffset || !canvas) {\n        console.log('❌ 无法获取客户端偏移量或画布元素');\n        return;\n      }\n      const canvasRect = canvas.getBoundingClientRect();\n\n      // 获取计算样式以确定边框宽度\n      const computedStyle = window.getComputedStyle(canvas);\n      const borderLeft = parseFloat(computedStyle.borderLeftWidth) || 0;\n      const borderTop = parseFloat(computedStyle.borderTopWidth) || 0;\n      console.log('📐 画布位置信息:', {\n        canvasRect: {\n          left: canvasRect.left,\n          top: canvasRect.top,\n          width: canvasRect.width,\n          height: canvasRect.height\n        },\n        borders: {\n          left: borderLeft,\n          top: borderTop\n        },\n        clientOffset: {\n          x: clientOffset.x,\n          y: clientOffset.y\n        }\n      });\n\n      // 找到当前拖拽的成员\n      const member = members.find(m => m.id === item.id);\n      if (!member) {\n        console.log('❌ 找不到对应的成员');\n        return;\n      }\n      console.log('👤 拖拽前成员信息:', {\n        id: member.id,\n        name: member.name,\n        currentPosition: {\n          x: member.x,\n          y: member.y\n        },\n        size: {\n          width: member.width || 72,\n          height: member.height || 72\n        },\n        initialOffset: item.initialOffset\n      });\n      const memberWidth = member.width || 72;\n      const memberHeight = member.height || 72;\n\n      // 计算鼠标在画布内容区域的相对位置（排除边框）\n      const relativeX = clientOffset.x - canvasRect.left - borderLeft;\n      const relativeY = clientOffset.y - canvasRect.top - borderTop;\n      console.log('📍 鼠标相对画布内容区位置:', {\n        relativeX,\n        relativeY,\n        '🔍 详细计算': {\n          '鼠标屏幕位置': {\n            x: clientOffset.x,\n            y: clientOffset.y\n          },\n          '画布边界位置': {\n            left: canvasRect.left,\n            top: canvasRect.top\n          },\n          '边框偏移': {\n            left: borderLeft,\n            top: borderTop\n          },\n          '最终相对位置': {\n            x: relativeX,\n            y: relativeY\n          }\n        }\n      });\n\n      // 使用拖拽开始时记录的偏移量来计算准确位置\n      let x, y;\n\n      // 首先尝试使用传递的偏移量\n      if (item.initialOffset && item.initialOffset.x !== null && item.initialOffset.y !== null) {\n        x = relativeX - item.initialOffset.x;\n        y = relativeY - item.initialOffset.y;\n        console.log('✅ 使用传递的初始偏移量:', {\n          initialOffset: item.initialOffset,\n          calculatedPosition: {\n            x,\n            y\n          }\n        });\n      } else {\n        // 备用方案：尝试从DOM元素获取偏移量\n        const memberElement = document.querySelector(`[data-member-id=\"${item.id}\"]`);\n        const offsetX = memberElement === null || memberElement === void 0 ? void 0 : memberElement.getAttribute('data-drag-offset-x');\n        const offsetY = memberElement === null || memberElement === void 0 ? void 0 : memberElement.getAttribute('data-drag-offset-y');\n        if (offsetX && offsetY) {\n          const backupOffset = {\n            x: parseFloat(offsetX),\n            y: parseFloat(offsetY)\n          };\n          x = relativeX - backupOffset.x;\n          y = relativeY - backupOffset.y;\n          console.log('🔄 使用DOM备份偏移量:', {\n            backupOffset,\n            calculatedPosition: {\n              x,\n              y\n            }\n          });\n        } else {\n          // 最终降级方案：使用中心点\n          x = relativeX - memberWidth / 2;\n          y = relativeY - memberHeight / 2;\n          console.log('⚠️ 使用降级方案（中心拖拽）:', {\n            calculatedPosition: {\n              x,\n              y\n            }\n          });\n        }\n      }\n      console.log('🧮 位置计算详情:', {\n        鼠标相对画布: {\n          relativeX,\n          relativeY\n        },\n        使用的偏移量: item.initialOffset || '备用方案',\n        计算结果: {\n          x,\n          y\n        },\n        成员当前存储位置: {\n          x: member.x,\n          y: member.y\n        }\n      });\n\n      // 🚨 强制边界检查和坐标修正\n      const beforeClamp = {\n        x,\n        y\n      };\n\n      // 严格的边界限制\n      x = Math.max(0, Math.min(x, CANVAS_WIDTH - memberWidth));\n      y = Math.max(0, Math.min(y, CANVAS_HEIGHT - memberHeight));\n\n      // 额外的安全检查\n      if (x < 0 || x > CANVAS_WIDTH - memberWidth || y < 0 || y > CANVAS_HEIGHT - memberHeight) {\n        console.error('❌ 坐标超出边界，强制修正:', {\n          x,\n          y\n        });\n        x = Math.max(0, Math.min(x, CANVAS_WIDTH - memberWidth));\n        y = Math.max(0, Math.min(y, CANVAS_HEIGHT - memberHeight));\n      }\n      console.log('🔒 边界限制后:', {\n        before: beforeClamp,\n        after: {\n          x,\n          y\n        },\n        canvasLimits: {\n          maxX: CANVAS_WIDTH - memberWidth,\n          maxY: CANVAS_HEIGHT - memberHeight\n        },\n        '✅ 边界检查': {\n          x轴有效: x >= 0 && x <= CANVAS_WIDTH - memberWidth,\n          y轴有效: y >= 0 && y <= CANVAS_HEIGHT - memberHeight\n        }\n      });\n\n      // 防止重叠（使用较大的尺寸作为碰撞检测）\n      const memberSize = Math.max(memberWidth, memberHeight);\n      const beforeOverlapCheck = {\n        x,\n        y\n      };\n      const {\n        x: safeX,\n        y: safeY\n      } = getNonOverlappingPosition(x, y, members, item.id, memberSize, CANVAS_WIDTH, CANVAS_HEIGHT);\n      console.log('🔄 重叠检测后:', {\n        before: beforeOverlapCheck,\n        after: {\n          x: safeX,\n          y: safeY\n        }\n      });\n      console.log('📌 最终移动结果:', {\n        成员: member.name,\n        移动前: {\n          x: member.x,\n          y: member.y\n        },\n        移动后: {\n          x: safeX,\n          y: safeY\n        },\n        移动距离: {\n          deltaX: safeX - member.x,\n          deltaY: safeY - member.y\n        }\n      });\n      updateMemberPosition(item.id, safeX, safeY);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"canvas-area\",\n    ref: node => {\n      drop(node);\n      if (ref) {\n        if (typeof ref === 'function') ref(node);else ref.current = node;\n      }\n    },\n    className: \"mx-auto relative bg-white border-4 border-black rounded-xl overflow-hidden shadow-inner select-none\",\n    style: {\n      width: CANVAS_WIDTH,\n      height: CANVAS_HEIGHT,\n      backgroundImage: `\n          radial-gradient(circle,rgb(188, 175, 200) 1px, transparent 1px),\n          linear-gradient(#f3f4f6,rgb(255, 255, 255))\n        `,\n      backgroundSize: '20px 20px, 100% 100%',\n      backgroundPosition: '0 0, 0 0',\n      boxSizing: 'content-box' // 使用content-box，边框在外部\n    },\n    children: [members.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 text-blue-400 text-xl font-semibold select-none\",\n      children: \"\\u8BF7\\u6DFB\\u52A0\\u5BB6\\u5EAD\\u6210\\u5458\\u5E76\\u62D6\\u52A8\\u5230\\u753B\\u5E03\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 9\n    }, this) : members.map(member => /*#__PURE__*/_jsxDEV(FamilyMember, {\n      member: member,\n      onUpdate: onUpdateMember\n    }, member.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 11\n    }, this)), process.env.NODE_ENV === 'development' && members.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        bottom: 10,\n        right: 10,\n        background: 'rgba(0,0,0,0.7)',\n        color: 'white',\n        padding: '8px',\n        borderRadius: '4px',\n        fontSize: '11px',\n        maxHeight: '120px',\n        overflowY: 'auto',\n        zIndex: 4000,\n        pointerEvents: 'none'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontWeight: 'bold',\n          marginBottom: '4px'\n        },\n        children: \"\\u5750\\u6807\\u72B6\\u6001:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 11\n      }, this), members.map(member => {\n        const memberWidth = member.width || 72;\n        const memberHeight = member.height || 72;\n        const isValid = member.x >= 0 && member.x <= CANVAS_WIDTH - memberWidth && member.y >= 0 && member.y <= CANVAS_HEIGHT - memberHeight;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: isValid ? '#4ade80' : '#f87171',\n            marginBottom: '2px'\n          },\n          children: [member.name, \": (\", Math.round(member.x), \", \", Math.round(member.y), \")\", !isValid && ' ❌']\n        }, member.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 309,\n    columnNumber: 5\n  }, this);\n}, \"eED3j7ud/YTb5Ke4iQLWhLsHo0w=\", false, function () {\n  return [useDrop];\n})), \"eED3j7ud/YTb5Ke4iQLWhLsHo0w=\", false, function () {\n  return [useDrop];\n});\n_c2 = Canvas;\nexport default Canvas;\nvar _c, _c2;\n$RefreshReg$(_c, \"Canvas$forwardRef\");\n$RefreshReg$(_c2, \"Canvas\");","map":{"version":3,"names":["React","forwardRef","useEffect","useDrop","FamilyMember","jsxDEV","_jsxDEV","MIN_DISTANCE","getNonOverlappingPosition","x","y","members","currentId","memberSize","canvasWidth","canvasHeight","safeX","safeY","tries","console","log","输入位置","成员尺寸","画布尺寸","其他成员数量","filter","m","id","length","overlappingMembers","Math","abs","isOverlapping","最终位置","尝试次数","当前位置","重叠成员","map","name","pos","max","min","getCanvasSize","viewportWidth","window","innerWidth","viewportHeight","innerHeight","width","height","CANVAS_WIDTH","CANVAS_HEIGHT","Canvas","_s","_c","updateMemberPosition","onUpdateMember","ref","canvasSize","setCanvasSize","useState","handleResize","addEventListener","removeEventListener","canvas","document","getElementById","rect","getBoundingClientRect","computedStyle","getComputedStyle","devicePixelRatio","borderLeft","parseFloat","borderLeftWidth","borderTop","borderTopWidth","borderRight","borderRightWidth","borderBottom","borderBottomWidth","contentWidth","contentHeight","设计尺寸","实际DOM尺寸","内容区域尺寸","DOM位置","left","top","边框信息","right","bottom","CSS样式尺寸","缩放比例","设备像素比","视口信息","scrollX","scrollY","drop","accept","item","monitor","clientOffset","getClientOffset","canvasRect","borders","member","find","currentPosition","size","initialOffset","memberWidth","memberHeight","relativeX","relativeY","calculatedPosition","memberElement","querySelector","offsetX","getAttribute","offsetY","backupOffset","鼠标相对画布","使用的偏移量","计算结果","成员当前存储位置","beforeClamp","error","before","after","canvasLimits","maxX","maxY","x轴有效","y轴有效","beforeOverlapCheck","成员","移动前","移动后","移动距离","deltaX","deltaY","node","current","className","style","backgroundImage","backgroundSize","backgroundPosition","boxSizing","children","fileName","_jsxFileName","lineNumber","columnNumber","onUpdate","process","env","NODE_ENV","position","background","color","padding","borderRadius","fontSize","maxHeight","overflowY","zIndex","pointerEvents","fontWeight","marginBottom","isValid","round","_c2","$RefreshReg$"],"sources":["D:/Code/family-constellation/frontend/src/Canvas.js"],"sourcesContent":["import React, { forwardRef, useEffect } from 'react';\r\nimport { useDrop } from 'react-dnd';\r\nimport FamilyMember from './FamilyMember';\r\nimport './index.css';\r\n\r\nconst MIN_DISTANCE = 0;\r\n\r\nfunction getNonOverlappingPosition(x, y, members, currentId, memberSize, canvasWidth, canvasHeight) {\r\n  let safeX = x;\r\n  let safeY = y;\r\n  let tries = 0;\r\n\r\n  console.log('🔍 重叠检测开始:', { \r\n    输入位置: { x, y }, \r\n    成员尺寸: memberSize, \r\n    画布尺寸: { canvasWidth, canvasHeight },\r\n    其他成员数量: members.filter(m => m.id !== currentId).length\r\n  });\r\n\r\n  while (tries < 30) {\r\n    const overlappingMembers = members.filter(\r\n      m =>\r\n        m.id !== currentId &&\r\n        Math.abs(m.x - safeX) < memberSize - MIN_DISTANCE &&\r\n        Math.abs(m.y - safeY) < memberSize - MIN_DISTANCE\r\n    );\r\n    \r\n    const isOverlapping = overlappingMembers.length > 0;\r\n\r\n    if (!isOverlapping) {\r\n      if (tries > 0) {\r\n        console.log('✅ 找到无重叠位置:', { \r\n          最终位置: { x: safeX, y: safeY }, \r\n          尝试次数: tries \r\n        });\r\n      }\r\n      break;\r\n    }\r\n\r\n    console.log(`⚠️ 第${tries + 1}次重叠检测:`, { \r\n      当前位置: { x: safeX, y: safeY }, \r\n      重叠成员: overlappingMembers.map(m => ({ name: m.name, pos: { x: m.x, y: m.y } }))\r\n    });\r\n\r\n    safeX = Math.max(0, Math.min(safeX + 15, canvasWidth - memberSize));\r\n    safeY = Math.max(0, Math.min(safeY + 15, canvasHeight - memberSize));\r\n    tries++;\r\n  }\r\n\r\n  if (tries >= 30) {\r\n    console.log('⚠️ 重叠检测达到最大尝试次数');\r\n  }\r\n\r\n  return { x: safeX, y: safeY };\r\n}\r\n\r\n// 动态计算画布尺寸\r\nconst getCanvasSize = () => {\r\n  const viewportWidth = window.innerWidth;\r\n  const viewportHeight = window.innerHeight;\r\n  \r\n  // 画布宽度占满页面宽度，高度占页面高度的40%\r\n  return {\r\n    width: viewportWidth,\r\n    height: Math.min(viewportHeight * 0.4, 500) // 最大500px\r\n  };\r\n};\r\n\r\nconst CANVAS_WIDTH = getCanvasSize().width;\r\nconst CANVAS_HEIGHT = getCanvasSize().height;\r\n\r\nconst Canvas = forwardRef(({ members, updateMemberPosition, onUpdateMember }, ref) => {\r\n  // 动态获取画布尺寸\r\n  const [canvasSize, setCanvasSize] = React.useState(getCanvasSize());\r\n  \r\n  // 监听窗口大小变化\r\n  React.useEffect(() => {\r\n    const handleResize = () => {\r\n      setCanvasSize(getCanvasSize());\r\n    };\r\n    \r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n  \r\n  const CANVAS_WIDTH = canvasSize.width;\r\n  const CANVAS_HEIGHT = canvasSize.height;\r\n  \r\n  // 打印画布尺寸信息\r\n  console.log('🎨 Canvas 渲染 - 动态尺寸:', { width: CANVAS_WIDTH, height: CANVAS_HEIGHT });\r\n  \r\n  // 监听画布DOM变化\r\n  useEffect(() => {\r\n    const canvas = document.getElementById('canvas-area');\r\n    if (canvas) {\r\n      const rect = canvas.getBoundingClientRect();\r\n      const computedStyle = window.getComputedStyle(canvas);\r\n      const devicePixelRatio = window.devicePixelRatio || 1;\r\n      \r\n      // 边框信息\r\n      const borderLeft = parseFloat(computedStyle.borderLeftWidth) || 0;\r\n      const borderTop = parseFloat(computedStyle.borderTopWidth) || 0;\r\n      const borderRight = parseFloat(computedStyle.borderRightWidth) || 0;\r\n      const borderBottom = parseFloat(computedStyle.borderBottomWidth) || 0;\r\n      \r\n      // 内容区域尺寸\r\n      const contentWidth = rect.width - borderLeft - borderRight;\r\n      const contentHeight = rect.height - borderTop - borderBottom;\r\n      \r\n      console.log('🎨 Canvas DOM 详细信息:', {\r\n        设计尺寸: { width: CANVAS_WIDTH, height: CANVAS_HEIGHT },\r\n        实际DOM尺寸: { width: rect.width, height: rect.height },\r\n        内容区域尺寸: { width: contentWidth, height: contentHeight },\r\n        DOM位置: { left: rect.left, top: rect.top },\r\n        边框信息: { \r\n          left: borderLeft, \r\n          top: borderTop, \r\n          right: borderRight, \r\n          bottom: borderBottom \r\n        },\r\n        CSS样式尺寸: { \r\n          width: computedStyle.width, \r\n          height: computedStyle.height \r\n        },\r\n        缩放比例: { \r\n          x: contentWidth / CANVAS_WIDTH, \r\n          y: contentHeight / CANVAS_HEIGHT \r\n        },\r\n        '⚠️ 尺寸匹配检查': {\r\n          '内容区宽度匹配': Math.abs(contentWidth - CANVAS_WIDTH) < 2,\r\n          '内容区高度匹配': Math.abs(contentHeight - CANVAS_HEIGHT) < 2\r\n        },\r\n        设备像素比: devicePixelRatio,\r\n        视口信息: {\r\n          innerWidth: window.innerWidth,\r\n          innerHeight: window.innerHeight,\r\n          scrollX: window.scrollX,\r\n          scrollY: window.scrollY\r\n        }\r\n      });\r\n    }\r\n  }, [members.length]); // 当成员数量变化时重新检查\r\n\r\n  const [, drop] = useDrop({\r\n    accept: 'MEMBER',\r\n    drop: (item, monitor) => {\r\n      console.log('🚀 开始拖拽放置操作 - 成员ID:', item.id);\r\n      \r\n      const clientOffset = monitor.getClientOffset();\r\n      const canvas = document.getElementById('canvas-area');\r\n      if (!clientOffset || !canvas) {\r\n        console.log('❌ 无法获取客户端偏移量或画布元素');\r\n        return;\r\n      }\r\n      \r\n      const canvasRect = canvas.getBoundingClientRect();\r\n      \r\n      // 获取计算样式以确定边框宽度\r\n      const computedStyle = window.getComputedStyle(canvas);\r\n      const borderLeft = parseFloat(computedStyle.borderLeftWidth) || 0;\r\n      const borderTop = parseFloat(computedStyle.borderTopWidth) || 0;\r\n      \r\n      console.log('📐 画布位置信息:', {\r\n        canvasRect: {\r\n          left: canvasRect.left,\r\n          top: canvasRect.top,\r\n          width: canvasRect.width,\r\n          height: canvasRect.height\r\n        },\r\n        borders: {\r\n          left: borderLeft,\r\n          top: borderTop\r\n        },\r\n        clientOffset: {\r\n          x: clientOffset.x,\r\n          y: clientOffset.y\r\n        }\r\n      });\r\n      \r\n      // 找到当前拖拽的成员\r\n      const member = members.find(m => m.id === item.id);\r\n      if (!member) {\r\n        console.log('❌ 找不到对应的成员');\r\n        return;\r\n      }\r\n      \r\n      console.log('👤 拖拽前成员信息:', {\r\n        id: member.id,\r\n        name: member.name,\r\n        currentPosition: { x: member.x, y: member.y },\r\n        size: { width: member.width || 72, height: member.height || 72 },\r\n        initialOffset: item.initialOffset\r\n      });\r\n      \r\n      const memberWidth = member.width || 72;\r\n      const memberHeight = member.height || 72;\r\n\r\n      // 计算鼠标在画布内容区域的相对位置（排除边框）\r\n      const relativeX = clientOffset.x - canvasRect.left - borderLeft;\r\n      const relativeY = clientOffset.y - canvasRect.top - borderTop;\r\n      \r\n      console.log('📍 鼠标相对画布内容区位置:', { \r\n        relativeX, \r\n        relativeY,\r\n        '🔍 详细计算': {\r\n          '鼠标屏幕位置': { x: clientOffset.x, y: clientOffset.y },\r\n          '画布边界位置': { left: canvasRect.left, top: canvasRect.top },\r\n          '边框偏移': { left: borderLeft, top: borderTop },\r\n          '最终相对位置': { x: relativeX, y: relativeY }\r\n        }\r\n      });\r\n\r\n      // 使用拖拽开始时记录的偏移量来计算准确位置\r\n      let x, y;\r\n      \r\n      // 首先尝试使用传递的偏移量\r\n      if (item.initialOffset && item.initialOffset.x !== null && item.initialOffset.y !== null) {\r\n        x = relativeX - item.initialOffset.x;\r\n        y = relativeY - item.initialOffset.y;\r\n        console.log('✅ 使用传递的初始偏移量:', {\r\n          initialOffset: item.initialOffset,\r\n          calculatedPosition: { x, y }\r\n        });\r\n      } else {\r\n        // 备用方案：尝试从DOM元素获取偏移量\r\n        const memberElement = document.querySelector(`[data-member-id=\"${item.id}\"]`);\r\n        const offsetX = memberElement?.getAttribute('data-drag-offset-x');\r\n        const offsetY = memberElement?.getAttribute('data-drag-offset-y');\r\n        \r\n        if (offsetX && offsetY) {\r\n          const backupOffset = { x: parseFloat(offsetX), y: parseFloat(offsetY) };\r\n          x = relativeX - backupOffset.x;\r\n          y = relativeY - backupOffset.y;\r\n          console.log('🔄 使用DOM备份偏移量:', {\r\n            backupOffset,\r\n            calculatedPosition: { x, y }\r\n          });\r\n        } else {\r\n          // 最终降级方案：使用中心点\r\n          x = relativeX - memberWidth / 2;\r\n          y = relativeY - memberHeight / 2;\r\n          console.log('⚠️ 使用降级方案（中心拖拽）:', {\r\n            calculatedPosition: { x, y }\r\n          });\r\n        }\r\n      }\r\n      \r\n      console.log('🧮 位置计算详情:', {\r\n        鼠标相对画布: { relativeX, relativeY },\r\n        使用的偏移量: item.initialOffset || '备用方案',\r\n        计算结果: { x, y },\r\n        成员当前存储位置: { x: member.x, y: member.y }\r\n      });\r\n\r\n      // 🚨 强制边界检查和坐标修正\r\n      const beforeClamp = { x, y };\r\n      \r\n      // 严格的边界限制\r\n      x = Math.max(0, Math.min(x, CANVAS_WIDTH - memberWidth));\r\n      y = Math.max(0, Math.min(y, CANVAS_HEIGHT - memberHeight));\r\n      \r\n      // 额外的安全检查\r\n      if (x < 0 || x > CANVAS_WIDTH - memberWidth || y < 0 || y > CANVAS_HEIGHT - memberHeight) {\r\n        console.error('❌ 坐标超出边界，强制修正:', { x, y });\r\n        x = Math.max(0, Math.min(x, CANVAS_WIDTH - memberWidth));\r\n        y = Math.max(0, Math.min(y, CANVAS_HEIGHT - memberHeight));\r\n      }\r\n      \r\n      console.log('🔒 边界限制后:', {\r\n        before: beforeClamp,\r\n        after: { x, y },\r\n        canvasLimits: { \r\n          maxX: CANVAS_WIDTH - memberWidth, \r\n          maxY: CANVAS_HEIGHT - memberHeight \r\n        },\r\n        '✅ 边界检查': {\r\n          x轴有效: x >= 0 && x <= CANVAS_WIDTH - memberWidth,\r\n          y轴有效: y >= 0 && y <= CANVAS_HEIGHT - memberHeight\r\n        }\r\n      });\r\n\r\n      // 防止重叠（使用较大的尺寸作为碰撞检测）\r\n      const memberSize = Math.max(memberWidth, memberHeight);\r\n      const beforeOverlapCheck = { x, y };\r\n      const { x: safeX, y: safeY } = getNonOverlappingPosition(\r\n        x, y, members, item.id, memberSize, CANVAS_WIDTH, CANVAS_HEIGHT\r\n      );\r\n      \r\n      console.log('🔄 重叠检测后:', {\r\n        before: beforeOverlapCheck,\r\n        after: { x: safeX, y: safeY }\r\n      });\r\n\r\n      console.log('📌 最终移动结果:', {\r\n        成员: member.name,\r\n        移动前: { x: member.x, y: member.y },\r\n        移动后: { x: safeX, y: safeY },\r\n        移动距离: { \r\n          deltaX: safeX - member.x, \r\n          deltaY: safeY - member.y \r\n        }\r\n      });\r\n\r\n      updateMemberPosition(item.id, safeX, safeY);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div\r\n      id=\"canvas-area\"\r\n      ref={node => {\r\n        drop(node);\r\n        if (ref) {\r\n          if (typeof ref === 'function') ref(node);\r\n          else ref.current = node;\r\n        }\r\n      }}\r\n      className=\"mx-auto relative bg-white border-4 border-black rounded-xl overflow-hidden shadow-inner select-none\"\r\n      style={{\r\n        width: CANVAS_WIDTH,\r\n        height: CANVAS_HEIGHT,\r\n        backgroundImage: `\r\n          radial-gradient(circle,rgb(188, 175, 200) 1px, transparent 1px),\r\n          linear-gradient(#f3f4f6,rgb(255, 255, 255))\r\n        `,\r\n        backgroundSize: '20px 20px, 100% 100%',\r\n        backgroundPosition: '0 0, 0 0',\r\n        boxSizing: 'content-box', // 使用content-box，边框在外部\r\n      }}\r\n    >\r\n      {members.length === 0 ? (\r\n        <div className=\"absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 text-blue-400 text-xl font-semibold select-none\">\r\n          请添加家庭成员并拖动到画布\r\n        </div>\r\n      ) : (\r\n        members.map(member => (\r\n          <FamilyMember key={member.id} member={member} onUpdate={onUpdateMember} />\r\n        ))\r\n      )}\r\n      \r\n      {/* 开发模式下的坐标调试面板 */}\r\n      {process.env.NODE_ENV === 'development' && members.length > 0 && (\r\n        <div style={{\r\n          position: 'absolute',\r\n          bottom: 10,\r\n          right: 10,\r\n          background: 'rgba(0,0,0,0.7)',\r\n          color: 'white',\r\n          padding: '8px',\r\n          borderRadius: '4px',\r\n          fontSize: '11px',\r\n          maxHeight: '120px',\r\n          overflowY: 'auto',\r\n          zIndex: 4000,\r\n          pointerEvents: 'none'\r\n        }}>\r\n          <div style={{ fontWeight: 'bold', marginBottom: '4px' }}>坐标状态:</div>\r\n          {members.map(member => {\r\n            const memberWidth = member.width || 72;\r\n            const memberHeight = member.height || 72;\r\n            const isValid = \r\n              member.x >= 0 && \r\n              member.x <= CANVAS_WIDTH - memberWidth && \r\n              member.y >= 0 && \r\n              member.y <= CANVAS_HEIGHT - memberHeight;\r\n            \r\n            return (\r\n              <div key={member.id} style={{ \r\n                color: isValid ? '#4ade80' : '#f87171',\r\n                marginBottom: '2px' \r\n              }}>\r\n                {member.name}: ({Math.round(member.x)}, {Math.round(member.y)}) \r\n                {!isValid && ' ❌'}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Canvas;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}